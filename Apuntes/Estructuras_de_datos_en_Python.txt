Listas (list)
Las listas son colecciones ordenadas y mutables (sus elementos pueden cambiar).
    append(x): Añade x al final de la lista.
    insert(i, x): Inserta x en la posición i.
    pop(i): Elimina y devuelve el elemento en la posición i; si i no se proporciona, elimina el último elemento.
    remove(x): Elimina la primera ocurrencia de x en la lista.
    sort(): Ordena los elementos en la lista (en el lugar).
    reverse(): Invierte el orden de los elementos.
    count(x): Devuelve la cantidad de veces que x aparece en la lista.
    index(x): Devuelve el índice de la primera ocurrencia de x (lanza un error si no se encuentra).

Diccionarios (dict)
Los diccionarios son colecciones desordenadas y mutables que almacenan pares clave-valor.
    get(key, default): Devuelve el valor asociado a key; si key no existe, devuelve default.
    keys(): Devuelve una vista de las claves en el diccionario.
    values(): Devuelve una vista de los valores en el diccionario.
    items(): Devuelve una vista de los pares (clave, valor).
    pop(key): Elimina y devuelve el valor asociado a key; lanza un error si key no existe.
    update(dict2): Actualiza el diccionario con los pares clave-valor de dict2.
    setdefault(key, default): Similar a get, pero si key no existe, la añade con el valor default.

Tuplas (tuple)
Las tuplas son colecciones ordenadas e inmutables (no puedes cambiar sus elementos una vez creadas). Tienen muy pocos métodos porque son inmutables. La mayoría de operaciones que quieras hacer requerirá crear una nueva tupla.
    count(x): Devuelve el número de veces que x aparece en la tupla.
    index(x): Devuelve el índice de la primera aparición de x; lanza un error si no se encuentra.

Sets (set)
Los sets son colecciones desordenadas de elementos únicos.
    add(x): Añade x al set si no está presente.
    remove(x): Elimina x del set; lanza un error si x no está presente.
    discard(x): Elimina x si está presente; si no está, no hace nada (no lanza error).
    union(set2): Devuelve un nuevo set con todos los elementos de ambos sets.
    intersection(set2): Devuelve un nuevo set con los elementos comunes a ambos sets.
    difference(set2): Devuelve un nuevo set con los elementos en el primer set que no están en set2.
    symmetric_difference(set2): Devuelve un set con los elementos que están en un solo set, pero no en ambos.
    clear(): Elimina todos los elementos del set.
